{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","findUser","userId","usersFromServer","find","App","useState","setUserId","setTitle","hasValidId","setHasValidId","hasValidTitle","setHasValidTitle","action","method","onSubmit","event","preventDefault","biggest","idList","Math","max","getBiggest","push","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e1c6198.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction findUser(userId: number): User | null {\n  const userToReturn = usersFromServer.find(user => user.id === userId);\n\n  return userToReturn || null;\n}\n\nconst getBiggest = (todos: Todo[]) => {\n  const idList = todos.map(todo => todo.id);\n  const biggest = Math.max(...idList) + 1;\n\n  return { biggest };\n};\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasValidId, setHasValidId] = useState(false);\n  const [hasValidTitle, setHasValidTitle] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setHasValidTitle(!value);\n  };\n\n  const handleUserSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(+value);\n    setHasValidId(!value);\n  };\n\n  const reset = () => {\n    setUserId(0);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const { biggest } = getBiggest(todos);\n\n    setHasValidId(!userId);\n    setHasValidTitle(!title);\n\n    if (userId > 0 && title) {\n      todos.push({\n        id: biggest,\n        title,\n        completed: false,\n        userId,\n        user: findUser(userId),\n      });\n\n      reset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitle}\n            />\n          </label>\n\n          {hasValidTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserSelection}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {\n                usersFromServer.map(user => (\n                  <option key={user.id} value={user.id}>\n                    {user.name}\n                  </option>\n                ))\n              }\n            </select>\n          </label>\n\n          {hasValidId && <span className=\"error\">Please choose a user</span>}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}